{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ApiclientService = /*#__PURE__*/(() => {\n  class ApiclientService {\n    constructor(http) {\n      this.http = http;\n    }\n    createArticle(article) {\n      return this.http.post(\"https://localhost:44396/article\", article, {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    createSubArticle(subArticle) {\n      return this.http.post(\"https://localhost:44396/subarticle\", subArticle, {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    updateSubArticle(subArticle) {\n      return this.http.put(\"https://localhost:44396/subarticle\", subArticle, {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    deleteSubArticle(id) {\n      return this.http.delete(\"https://localhost:44396/subarticle/\" + id, {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    editArticle(article) {\n      return this.http.put(\"https://localhost:44396/article\", article, {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    createUser(user) {\n      return this.http.post(\"https://localhost:44396/users\", user, {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    editUser(user) {\n      return this.http.put(\"https://localhost:44396/users\", user, {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    deleteUser(id) {\n      return this.http.delete(\"https://localhost:44396/users/\" + id, {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    getArticle(id) {\n      return this.http.get(\"https://localhost:44396/article/\" + id, {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    getUser(id) {\n      return this.http.get(\"https://localhost:44396/users/\" + id, {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    getSubArticles(articleId) {\n      return this.http.get(\"https://localhost:44396/subarticle/admin/article/\" + articleId, {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    getArticles() {\n      return this.http.get(\"https://localhost:44396/article/all\", {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    getGroups() {\n      return this.http.get(\"https://localhost:44396/groups/all\", {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    getGroup(id) {\n      return this.http.get(\"https://localhost:44396/groups/\" + id, {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    getRoles() {\n      return this.http.get(\"https://localhost:44396/roles/all\", {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    getUsers() {\n      return this.http.get(\"https://localhost:44396/users/all\", {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    getVotes() {\n      return this.http.get(\"https://localhost:44396/vote/all\", {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    getStatistics() {\n      return this.http.get(\"https://localhost:44396/subarticle/statistics\", {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    createVote() {\n      return this.http.get(\"https://localhost:44396/groups/create-vote\", {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    createSession(session) {\n      return this.http.post(\"https://localhost:44396/session\", session, {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    authenticate(username, password) {\n      return this.http.get(\"https://localhost:44396/users/login\", {\n        headers: new HttpHeaders({\n          'Authorization': username + ':' + password\n        })\n      });\n    }\n    getUserByEmail() {\n      return this.http.get(\"https://localhost:44396/users/email\", {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    editGroup(group) {\n      return this.http.put(\"https://localhost:44396/groups\", group, {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    createGroup(group) {\n      return this.http.post(\"https://localhost:44396/groups\", group, {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    deleteGroup(id) {\n      return this.http.delete(\"https://localhost:44396/groups/\" + id, {\n        headers: new HttpHeaders({\n          'Authorization': localStorage.getItem(\"username\") + ':' + localStorage.getItem(\"password\")\n        })\n      });\n    }\n    static #_ = this.ɵfac = function ApiclientService_Factory(t) {\n      return new (t || ApiclientService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ApiclientService,\n      factory: ApiclientService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ApiclientService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}