{"ast":null,"code":"var _a, _b, _c;\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\n//import { MatTableDataSource, MatPaginator, MatSort, MatDialog } from '@angular/material';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiclientService } from 'src/app/apiclient.service';\nimport { CreateSubarticleComponent } from '../create-subarticle/create-subarticle.component';\nlet ArticleDetailsComponent = class ArticleDetailsComponent {\n  constructor(client, route, dialog) {\n    this.client = client;\n    this.route = route;\n    this.dialog = dialog;\n    this.articleId = 0;\n    this.subArticles = [];\n    this.displayedColumns = [\"name\", \"description\", \"edit\", \"delete\"];\n    this.dataSource = new MatTableDataSource();\n  }\n  ngOnInit() {\n    this.articleId = Number(this.route.snapshot.paramMap.get(\"id\"));\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.client.getArticle(this.articleId).subscribe(response => this.article = response.data);\n    this.client.getSubArticles(this.articleId).subscribe(response => {\n      this.subArticles = response.data;\n      this.dataSource.data = response.data;\n    });\n  }\n  getStatus(session) {\n    if (session === null) {\n      return \"Never voted\";\n    } else {\n      const from = new Date(session.from);\n      const to = new Date(session.to);\n      const now = new Date(new Date());\n      if (from > now) {\n        return \"Not yet started\";\n      } else if (from < now && to > now) {\n        return \"Voting\";\n      } else if (now > to) {\n        return \"Voted\";\n      }\n    }\n  }\n  edit(id) {\n    window.open(\"/article/edit/\" + id, \"_self\");\n  }\n  createSession(id) {\n    window.open(\"/session/create/\" + id, \"_self\");\n  }\n  addSubArticle() {\n    const dialogRef = this.dialog.open(CreateSubarticleComponent, {\n      width: '250px',\n      data: {\n        subArticle: {\n          articleId: this.articleId\n        },\n        type: \"save\"\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.client.getSubArticles(this.articleId).subscribe(response => {\n        this.subArticles = response.data;\n        this.dataSource.data = response.data;\n      });\n    });\n  }\n  editSubArticle(subArticle) {\n    const dialogRef = this.dialog.open(CreateSubarticleComponent, {\n      width: '250px',\n      data: {\n        subArticle: subArticle,\n        type: \"update\"\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.client.getSubArticles(this.articleId).subscribe(response => {\n        this.subArticles = response.data;\n        this.dataSource.data = response.data;\n      });\n    });\n  }\n  deleteSubArticle(subArticle) {\n    this.client.deleteSubArticle(subArticle.id).subscribe(response => {\n      this.client.getSubArticles(this.articleId).subscribe(response => {\n        this.subArticles = response.data;\n        this.dataSource.data = response.data;\n      });\n    });\n  }\n};\n__decorate([ViewChild(MatPaginator, {\n  static: true\n}), __metadata(\"design:type\", typeof (_b = typeof MatPaginator !== \"undefined\" && MatPaginator) === \"function\" ? _b : Object)], ArticleDetailsComponent.prototype, \"paginator\", void 0);\n__decorate([ViewChild(MatSort, {\n  static: true\n}), __metadata(\"design:type\", typeof (_c = typeof MatSort !== \"undefined\" && MatSort) === \"function\" ? _c : Object)], ArticleDetailsComponent.prototype, \"sort\", void 0);\nArticleDetailsComponent = __decorate([Component({\n  selector: 'app-article-details',\n  templateUrl: './article-details.component.html',\n  styleUrls: ['./article-details.component.css']\n}), __metadata(\"design:paramtypes\", [ApiclientService, ActivatedRoute, typeof (_a = typeof MatDialog !== \"undefined\" && MatDialog) === \"function\" ? _a : Object])], ArticleDetailsComponent);\nexport { ArticleDetailsComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}