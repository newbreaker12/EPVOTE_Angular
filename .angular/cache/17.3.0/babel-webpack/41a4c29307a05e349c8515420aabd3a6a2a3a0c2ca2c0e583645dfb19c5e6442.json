{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material';\nimport * as i0 from \"@angular/core\";\nconst _c0 = () => ({\n  width: \"100%\",\n  height: \"360px\"\n});\nexport let PieComponent = /*#__PURE__*/(() => {\n  class PieComponent {\n    // events\n    chartClicked(e) {\n      console.log(e);\n    }\n    chartHovered(e) {\n      console.log(e);\n    }\n    constructor(data) {\n      this.data = data;\n      // Pie\n      this.pieChartLabels = ['Chrome', 'Safari', 'Firefox', 'Internet Explorer', 'Other'];\n      this.pieChartData = [40, 20, 20, 10, 10];\n      this.pieChartType = 'pie';\n      // You can access the data passed to the dialog via this.data\n    }\n    static #_ = this.ɵfac = function PieComponent_Factory(t) {\n      return new (t || PieComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PieComponent,\n      selectors: [[\"app-pie\"]],\n      decls: 1,\n      vars: 3,\n      consts: [[3, \"options\", \"styles\"]],\n      template: function PieComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"canvasjs-chart\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"options\", ctx.chartOptions)(\"styles\", i0.ɵɵpureFunction0(2, _c0));\n        }\n      }\n    });\n  }\n  return PieComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}